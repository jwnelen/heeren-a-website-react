{"version":3,"sources":["contents/home.js","data/api.js","components/daltonsList/daltonsList.js","components/daltonEditor/daltonEditor.js","contents/daltons.js","components/NavigationBar/navbar.js","components/rating-display/rating-display.js","components/player/player.js","components/playerGrid/playerGrid.js","components/playerProfile/playerProfile.js","app/App.js","serviceWorker.js","index.js"],"names":["Home","className","Component","a","fetch","apiUrl","response","json","data","id","result","console","log","JSON","stringify","i","length","player_id","nickname","error","Error","info","type","message","dalton","method","headers","body","ok","getPlayers","getPlayerById","getDaltons","getPlayersIdAndName","getAmountDaltonsPlayer","addDalton","getDaltonById","daltonsList","props","DaltonListFactory","daltons","state","players","items","map","index","key","person_earned_id","reason","person_took_id","date_earned","moment","locale","format","date_taken","Button","variant","dalton_id","onClick","handleClick","width","height","viewBox","fill","xmlns","d","fillRule","Table","striped","bordered","hover","e","target","onSelectDalton","isLoading","bind","api","then","setState","this","defaultNewDalton","daltonEditor","dateRegex","daltonData","validDateEarned","test","validDateTook","validReason","validPlayerTook","errorsNew","push","errors","alert","open","playerData","handleInputChange","toggleEditor","event","newDaltonData","value","findIndex","keyEl","prevProps","newDalton","catch","err","Container","Object","keys","Card","Header","Collapse","in","Body","Form","noValidate","Row","Col","Group","Label","htmlFor","Control","as","onChange","custom","isInvalid","isInValid","player","Feedback","placeholder","md","rows","Daltons","handleDaltonChange","dal_id","NavBar","href","RatingDisplay","ratingSinglesEndingYear","ratingSingles","ratingDoublesEndingYear","ratingDoubles","Player","src","alt","name","single_rating","doubles_rating","single_rating_ending_year","doubles_rating_ending_year","PlayerList","PlayerGrid","PlayerProfile","amountDaltonsEarned","match","params","l","daltons_earned","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0af58aee.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Home extends Component {\r\n\trender() {\r\n\t\t\treturn (\r\n\t\t\t\t\t<div className=\"typewriter\">\r\n\t\t\t\t\t\t<h1 className=\"App-header\">Welcome</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t}\r\n    \r\nexport default Home\r\n    ","const apiUrl = '/api';\r\n\r\n\r\nasync function getPlayers() {\r\n\tlet response = await fetch(apiUrl + '/players');\r\n\tlet data = await response.json();\r\n\treturn data;\r\n};\r\n\r\nasync function getPlayerById(id) {\t\r\n\tlet response = await fetch(apiUrl + '/players/' + id);\r\n\tlet data = await response.json();\r\n\treturn data;\r\n};\r\n\r\nasync function getPlayersIdAndName() {\t\r\n\tlet response = await fetch(apiUrl + '/players/');\r\n\tlet data = await response.json();\r\n\tlet result = {};\r\n\tconsole.log('data: ' + JSON.stringify(data));\r\n\tfor(let i = 0; i < data.length; i++) {\r\n\t\tresult[data[i].player_id] = data[i].nickname\r\n\t}\r\n\tconsole.log(result);\r\n\treturn result;\r\n};\r\n\r\nasync function getDaltons() {\t\r\n\tlet response = await fetch(apiUrl + '/daltons');\r\n\tlet data = await response.json();\r\n\treturn data;\r\n};\r\n\r\nasync function getDaltonById(id) {\r\n\tif(id) {\r\n\tlet response = await fetch(apiUrl + '/daltons/' + id);\r\n\tlet data = await response.json();\r\n\treturn data;\r\n\t} else {\r\n\t\tconst error = new Error();\r\n\t\terror.info = {\r\n\t\t\ttype: 'Error',\r\n\t\t\tmessage: 'Could not edit Dalton: '\r\n\t\t}\r\n\t\treturn (error);\r\n\t}\r\n};\r\n\r\n\r\nasync function addDalton(dalton) {\t\r\n\tconsole.log('dalton in api function: ' + JSON.stringify(dalton));\r\n\t\r\n\tlet response = await fetch(apiUrl + '/daltons', {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n  \t'Content-type': 'application/json; charset=UTF-8' // Indicates the content \r\n \t\t},\r\n\t\tbody: JSON.stringify(dalton)\r\n\t});\r\n\t\r\n\tlet result = await response;\r\n\t\r\n\tif(response.ok){\r\n\t\treturn result\r\n\t} else {\r\n\t\tconst error = new Error();\r\n\t\terror.info = {\r\n\t\t\ttype: 'Error',\r\n\t\t\tmessage: 'Could not add Dalton: ' + JSON.stringify(dalton)\r\n\t\t}\r\n\t\treturn (error);\r\n\t}\r\n};\r\n\r\nasync function getAmountDaltonsPlayer(id) {\t\r\n\tlet response = await fetch(apiUrl + '/daltons/amountDaltonsEarned/' + id);\r\n\tlet data = await response.json();\r\n\treturn data;\r\n};\r\n\r\n\r\nexport default {\r\n\tgetPlayers, \r\n\tgetPlayerById, \r\n\tgetDaltons, \r\n\tgetPlayersIdAndName, \r\n\tgetAmountDaltonsPlayer,\r\n\taddDalton,\r\n\tgetDaltonById\r\n};\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './daltonsList.css'\r\nimport api from '../../data/api.js'\r\nimport Table from 'react-bootstrap/Table'\r\nimport moment from 'moment'\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'moment/locale/nl'\r\n\t\t\t\t\t\t\t\r\nclass daltonsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state = {\r\n      daltons: [],\r\n\t\t\tplayers: [],\r\n      isLoading: true,\r\n      error: null,\r\n    };\r\n\t\t\r\n\t\t this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\t\r\n\tDaltonListFactory = () => {\r\n\tconst daltons = this.state.daltons;\r\n\tconst players = this.state.players;\r\n\t\r\n\tconst items = daltons.map( (dalton, index) => \r\n\t\t<tr key={index}>\r\n      <td>{index}</td>\r\n      <td>{players[dalton.person_earned_id] ? players[dalton.person_earned_id] : '-' }</td>\r\n      <td>{dalton.reason}</td>\r\n      <td>{players[dalton.person_took_id]}</td>\r\n      <td>{\r\n\t\t\t\t\tdalton.date_earned ? moment(dalton.date_earned).locale('nl').format('dddd DD MMMM YYYY') : ''}</td>\r\n   <td>{\r\n\t\t\t\t\tdalton.date_taken ? moment(dalton.date_taken).locale('nl').format('dddd DD MMMM YYYY') : ''}</td>\r\n\t\t\t<td>\r\n\t\t\t\t<Button variant=\"secondary\" id={dalton.dalton_id} onClick={this.handleClick}>\r\n\t\t\t\t\t<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-pencil-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\r\n  <path fillRule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\r\n</svg>\r\n\t\t\t\t</Button>\r\n\t\t\t</td>\r\n    </tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t );\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\tconst table = \r\n\t\t\t<Table striped bordered hover variant=\"dark\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t<th>Verdiend</th>\r\n\t\t\t\t\t\t<th>Reden</th>\r\n\t\t\t\t\t\t<th>Genomen door</th>\r\n\t\t\t\t\t\t<th>Datum verdient</th>\r\n\t\t\t\t\t\t<th>Datum genomen</th>\r\n\t\t\t\t\t\t<th>Edit</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t{items}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\treturn table\r\n}\r\n\r\n\t\r\n\thandleClick = (e) => {\r\n\t\tconsole.log('handle click', e.target.id);\r\n\t\tthis.props.onSelectDalton(e.target.id);\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tapi.getDaltons().then(data => {\r\n\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\tdaltons: data, \r\n\t\t\t\t\t\t\t\tisLoading: false \r\n\t\t\t\t\t});\r\n\t\t})\r\n\t\t\r\n\t\tapi.getPlayersIdAndName().then(data => {\r\n\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\tplayers: data, \r\n\t\t\t\t\t\t\t\tisLoading: false \r\n\t\t\t\t\t});\r\n\t\t})\r\n\t}\r\n\t\r\n    render(props) {\r\n        return(\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t{ this.state.isLoading === true ?\r\n\t\t\t\t\t\t\t\t\t<p>no data to display </p> :\r\n\t\t\t\t\t\t\t\t\t<this.DaltonListFactory> </this.DaltonListFactory>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default daltonsList\r\n\r\n","import React, {Component } from 'react';\r\nimport './daltonEditor.css'\r\nimport api from '../../data/api.js'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\n\r\nconst defaultNewDalton = {\r\n\t\t\tdate_earned: \"\",\r\n    \tdate_taken: \"\",\r\n\t\t\treason: \"\",\r\n    \tperson_earned_id: \"0\",\r\n\t\t\tperson_took_id: \"0\",\r\n\t\t\tdalton_id: null\r\n\t\t}\r\n\r\nclass daltonEditor extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\topen: false,\r\n      daltonData: {},\r\n\t\t\tplayerData: [],\r\n      isLoading: true,\r\n\t\t\terrors: [],\r\n    };\r\n\t\t\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t\tthis.toggleEditor = this.toggleEditor.bind(this);\r\n\t}\r\n\r\n\thandleInputChange(event) {\r\n\t\tconst target = event.target;\r\n\t\t\r\n\t\tlet newDaltonData = this.state.daltonData;\r\n\t\tnewDaltonData[target.id] = target.value;\r\n\t\t\r\n\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\tdaltonData: newDaltonData\r\n\t\t\t\t\t});\r\n\t}\r\n\t\r\n\thandleClick = () => {\r\n\t\tconst dateRegex = /^((?:19|20)\\d\\d)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])/;\r\n\t\tlet dalton = this.state.daltonData;\r\n\t\t\r\n\t\tlet validDateEarned = dalton.date_earned.length > 0 ? dateRegex.test(dalton.date_earned) : true;\r\n\t\tlet validDateTook = dalton.date_taken.length > 0 ? dateRegex.test(dalton.date_taken) : true;\r\n\t\tlet validReason = dalton.reason.length > 0 && dalton.reason.length < 255;\r\n\t\tlet validPlayerTook = dalton.person_took_id > 0;\r\n\t\t\r\n\t\tconst errorsNew = [];\r\n\t\t\r\n\t\tif(!validDateTook) errorsNew.push('date_taken')\r\n\t\tif(!validDateEarned) errorsNew.push('date_earned')\r\n\t\tif(!validReason) errorsNew.push('reason')\r\n\t\tif(!validPlayerTook) errorsNew.push('person_took_id')\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\terrors: errorsNew\r\n    });\r\n\t\t\r\n\t\tif(errorsNew.length === 0) {\r\n\t\t\tapi.addDalton(this.state.daltonData).then(a => {\r\n\t\t\t\tif(a instanceof Error) alert(a.info.message)\r\n\t\t\t\telse alert('added Dalton!')\r\n\t\t\t});\r\n\t\t\t\r\n//\t\t\twindow.location.reload(false)\r\n\t\t}\r\n\t}\r\n\t\r\n\tisInValid(key) {\r\n\t\treturn this.state.errors.findIndex(keyEl => keyEl === key) !== -1;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tapi.getPlayers().then(data => {\r\n\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\tplayerData: data, \r\n\t\t\t\t\t});\r\n\t\t})\t\t\r\n\t\t\r\n\t\tconsole.log('default dalton : ' + JSON.stringify(defaultNewDalton));\r\n\t\t\r\n\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\tdaltonData: defaultNewDalton, \r\n\t\t\t\t\t\t\t\tisLoading: false \r\n\t\t\t\t\t});\t\t\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconsole.log('update props: ' + this.props.dalton_id);\r\n\t\tlet dalton_id = this.props.dalton_id\r\n\t\t\r\n\t\tif(dalton_id !== 0 && prevProps.dalton_id !== dalton_id) {\r\n\t\t\tapi.getDaltonById(this.props.dalton_id).then(data => {\r\n\t\t\t\t\r\n\t\t\t\tconst newDalton = {}\r\n\t\t\t\tnewDalton.date_earned = data[0].date_earned ? data[0].date_earned : ''\r\n\t\t\t\tnewDalton.date_taken = data[0].date_taken ? data[0].date_taken : ''\r\n\t\t\t\tnewDalton.reason = data[0].reason ? data[0].reason : ''\r\n\t\t\t\tnewDalton.person_earned_id = data[0].person_earned_id ? data[0].person_earned_id : '0'\r\n\t\t\t\tnewDalton.person_took_id = data[0].person_took_id ? data[0].person_took_id : '0'\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\t\tdaltonData: newDalton, \r\n\t\t\t\t\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\t\t\t\t\topen: true\r\n\t\t\t\t\t\t});\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err.message)\r\n\t\t\t\tthis.setState({open: false})\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\t\t\r\n\t}\r\n\r\n\ttoggleEditor() {\r\n\t\tthis.setState({\r\n\t\t\topen: !this.state.open\r\n\t\t});\r\n\t}\r\n\t\r\n\trender(props) {\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t{ Object.keys(this.state.daltonData).length === 0 ?\r\n\t\t\t\t\t\t\t\t\t<p>no data to display </p> :\r\n\t\t\t\t<Card >\t\r\n\t\t\t \t\t<Card.Header onClick={this.toggleEditor}>Featured</Card.Header>\r\n\t\t\t<Collapse in={this.state.open}>\r\n\t\t\t \t\t<Card.Body>\t\t\r\n\t\t\t <Form noValidate>\r\n\t\t\t\t\t{/* FIRST ROW */}\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label className=\"\" htmlFor=\"inlineFormCustomSelectPref\">\r\n\t\t\t\t\t\t\t\t\tMoet genomen worden door\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\tid=\"person_took_id\"\r\n\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\tcustom\r\n\t\t\t\t\t\tclassName='m-0'\r\n\t\t\t\t\t\tisInvalid={this.isInValid('person_took_id')}\r\n\t\t\t\t\t\tvalue={this.state.daltonData.person_took_id}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<option value={0}>Choose...</option>\r\n\t\t\t\t\t{( \r\n\t\t\t\t\t\t\tthis.state.playerData.map( (player, index) => {\r\n\t\t\t\t\t\t\t\treturn <option \r\n\t\t\t\t\t\t\t\t\tkey={index} \r\n\t\t\t\t\t\t\t\t\tvalue={player.id}\r\n\t\t\t\t\t\t\t\t\t>{player.nickname}\r\n\t\t\t\t\t\t\t\t</option> }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t )\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n                  Choose your player\r\n            </Form.Control.Feedback>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label>Genomen op (als al genomen)</Form.Label>\r\n\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\tvalue={this.state.daltonData.date_taken} \r\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\tisInvalid={this.isInValid('date_taken')}\r\n\t\t\t\t\t\t\tid=\"date_taken\"\r\n\t\t\t\t\t\t\tplaceholder=\"2020-01-01\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n                  Date should be of format YYYY-MM-DD\r\n            </Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label>Reason</Form.Label>\r\n\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\tvalue={this.state.daltonData.reason} \r\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\tid=\"reason\"\r\n\t\t\t\t\t\t\tisInvalid={this.isInValid('reason')}\r\n\t\t\t\t\t\t\tas=\"textarea\" rows=\"1\" />\r\n\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n                  Reason should not be empty\r\n            </Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* SECOND ROW */}\r\n\t\t\t\t\t<Row className=\"justify-content-center align-items-start p-3 \">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Label className=\"\" htmlFor=\"inlineFormCustomSelectPref\">\r\n\t\t\t\t\t\tVerdiend door\r\n\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\tid=\"person_earned_id\"\r\n\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\tcustom\r\n\t\t\t\t\t\tclassName='m-0'\r\n\t\t\t\t\t\tisInvalid={this.isInValid('person_earned_id')}\r\n\t\t\t\t\t\tvalue={this.state.daltonData.person_earned_id}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<option value={0}>Niemand</option>\t\t\t\t\t\t\r\n\t\t\t\t\t{( \r\n\t\t\t\t\t\t\tthis.state.playerData.map( (player, index) => {\r\n\t\t\t\t\t\t\t\treturn <option \r\n\t\t\t\t\t\t\t\t\tkey={index} \r\n\t\t\t\t\t\t\t\t\tvalue={player.id}\r\n\t\t\t\t\t\t\t\t\t>{player.nickname}\r\n\t\t\t\t\t\t\t\t</option> }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t )\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n                  Choose your player\r\n            </Form.Control.Feedback>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label>Verdient op</Form.Label>\r\n\t\t\t\t\t\t<Form.Control \r\n\t\t\t\t\t\t\tvalue={this.state.daltonData.date_earned} \r\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\tisInvalid={this.isInValid('date_earned')}\r\n\t\t\t\t\t\t\tid=\"date_earned\"\r\n\t\t\t\t\t\t\tplaceholder=\"2020-01-01\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n                  Date should be of format YYYY-MM-DD\r\n            </Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md={2} className=\"my-auto\">\r\n\t\t\t\t\t <Button variant=\"primary\" onClick={this.handleClick}>Add Dalton</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t}\r\n\t\t\t</Container>\r\n\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default daltonEditor","import React, { Component } from 'react';\r\nimport DaltonsList from '../components/daltonsList/daltonsList'\r\nimport DaltonEditor from '../components/daltonEditor/daltonEditor'\r\n\r\nclass Daltons extends Component {\r\n\t\r\n\tstate = {\r\n\t\tdalton_id: 0\r\n\t}\r\n\t\r\n\thandleDaltonChange = (dal_id) => {\r\n\t\tthis.setState({dalton_id: dal_id})\r\n\t\tconsole.log('other dalton: ' + dal_id)\r\n\t}\r\n\t\r\n\trender() {\r\n\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1>Daltons</h1>\r\n\t\t\t\t\t\t<DaltonEditor dalton_id={this.state.dalton_id}></DaltonEditor>\r\n\t\t\t\t\t\t<DaltonsList onSelectDalton={this.handleDaltonChange}></DaltonsList>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t}\r\n    \r\nexport default Daltons\r\n    ","import React, {Component} from 'react';\r\nimport './navbar.css'\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        return(\r\n           \t<ul className=\"nav justify-content-center\">\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<a className=\"nav-link active\" href=\"/\">Home</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"/team\">Team</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"/daltons\">Daltons</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar\r\n","import React, {Component} from 'react';\r\nimport './rating-display.css'\r\n\r\nclass RatingDisplay extends Component {\r\n\trender(props) {\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"rating border\"> \r\n\t\t\t\t\t{this.props.ratingSinglesEndingYear || 6}\r\n\t\t\t\t\t<span className=\"current-rating\">\r\n\t\t\t\t\t\t\t{this.props.ratingSingles || '0.0000'} </span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"rating border\"> \r\n\t\t\t\t\t{this.props.ratingDoublesEndingYear || 6}\r\n\t\t\t\t\t<span className=\"current-rating justify-content-center\">\r\n\t\t\t\t\t\t\t{this.props.ratingDoubles || '0.0000'} </span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default RatingDisplay","import React, {Component} from 'react';\r\nimport './player.css'\r\nimport RatingDisplay from '../rating-display/rating-display.js'\r\n\r\nlet link_fed = \"https://images2.persgroep.net/rcs/SkRGKcrJ4sDaW0oWOoBQKgW9lYA/diocontent/169326362/_fitwidth/694/?appId=21791a8992982cd8da851550a453bd7f&quality=0.8\"\r\n\r\nclass Player extends Component {\r\n\trender(props) {\t\t\t\r\n\t\t\treturn(\r\n\t\t\t\t <div className=\"card player\">\r\n\t\t\t\t\t\t<a href={ \"/players/\" + this.props.player.id}><img className=\"card-img-top\" src={link_fed} alt=\"player\"></img></a>\r\n\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<a href={ \"/players/\" + this.props.player.id}><h3 className=\"card-title\">{this.props.player.nickname || \"Nickname\"}</h3> </a>\r\n\t\t\t\t\t\t\t\t<p className=\"card-text text-secondary mb-1 font-italic font-light\" >{this.props.player.name || \"Name\"}</p>\r\n\t\t\t\t\t<ul className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t<li className=\"list-group-item\"> \r\n\t\t\t\t\t\t\t<RatingDisplay \r\n\t\t\t\t\t\t\t\tratingSingles={this.props.player.single_rating}\r\n\t\t\t\t\t\t\t\tratingDoubles={this.props.player.doubles_rating}\r\n\t\t\t\t\t\t\t\tratingSinglesEndingYear={this.props.player.single_rating_ending_year}\r\n\t\t\t\t\t\t\t\tratingDoublesEndingYear={this.props.player.doubles_rating_ending_year}>\r\n\t\t\t\t\t\t\t</RatingDisplay>\r\n\t\t\t\t\t\t</li> \r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default Player\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport Player from '../player/player'\r\nimport './playerGrid.css'\r\nimport api from '../../data/api.js'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\nfunction PlayerList(players) {\r\n\tconst items = players.players.map( (player, index) => \r\n\t\t\t\t<Player className=\"col-6\" \r\n\t\t\t\t\tplayer={player}\r\n\t\t\t\t\tkey={index}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\treturn items\r\n}\t\t\r\n\r\nclass PlayerGrid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state = {\r\n      playerData: [],\r\n      isLoading: true,\r\n      error: null,\r\n    };\r\n  }\t\t\t\t\t\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tapi.getPlayers().then(data => {\r\n\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\tplayerData: data, \r\n\t\t\t\t\t\t\t\tisLoading: false \r\n\t\t\t\t\t});\r\n\t\t})\t\t\r\n\t}\r\n\t\r\n    render(props) {\r\n        return(\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1>Het Heeren-A team</h1>\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t\t\t\t{ this.state.isLoading === true ?\r\n\t\t\t\t\t\t\t\t\t<p>no data to display </p> :\r\n\t\t\t\t\t\t\t\t\t\t<PlayerList players={this.state.playerData}></PlayerList>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerGrid\r\n\r\n","import React, {Component} from 'react';\r\nimport './playerProfile.css'\r\nimport api from '../../data/api.js'\r\nimport RatingDisplay from '../rating-display/rating-display.js'\r\n\r\nlet link_fed = \"https://images2.persgroep.net/rcs/SkRGKcrJ4sDaW0oWOoBQKgW9lYA/diocontent/169326362/_fitwidth/694/?appId=21791a8992982cd8da851550a453bd7f&quality=0.8\"\r\n\r\nclass PlayerProfile extends Component {\r\n\t\r\n\tconstructor(props) {\r\n    super(props);\r\n \r\n    this.state = {\r\n      playerData: [],\r\n\t\t\tamountDaltonsEarned: 0,\r\n      isLoading: true,\r\n      error: null,\r\n    };\r\n  }\t\t\t\t\t\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tconst { id } = this.props.match.params\r\n\t\t\r\n\t\tapi.getPlayerById(id).then(data => {\r\n\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t\tplayerData: data[0]\r\n\t\t\t\t\t});\r\n\t\t})\r\n\t\t\r\n\t\tapi.getAmountDaltonsPlayer(id).then(data => {\r\n\t\t\tconsole.log(data);\r\n\t\t\tlet l = data[0] ? data[0].daltons_earned : 0\r\n\t\t\tthis.setState({ \r\n\t\t\t\tamountDaltonsEarned: l,\r\n\t\t\t\tisLoading: false \r\n\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\t\r\n\trender(props) {\t\t\t\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"card container\">\r\n\t\t\t\t\t<div className=\"card-body player\">\r\n\t\t\t\t\t\t<img className=\"card-img-top\" src={link_fed} alt=\"player\"></img>\r\n\t\t\t\t\t\t\t\t<h3 className=\"card-title\">{this.state.playerData.nickname || \"Nickname\"}</h3> \t\t\t\t\t\t<p className=\"card-text text-secondary mb-1 font-italic font-light\" >{this.state.playerData.name || \"Name\"}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ul className=\"list-group list-group-flush\">\r\n\t\t\t\t\t\t<li className=\"list-group-item\">\r\n\t\t\t\t\t\t\t<RatingDisplay\r\n\t\t\t\t\t\t\t\tratingSingles={this.state.playerData.single_rating}\r\n\t\t\t\t\t\t\t\tratingDoubles={this.state.playerData.doubles_rating}\r\n\t\t\t\t\t\t\t\tratingSinglesEndingYear={this.state.playerData.single_rating_ending_year}\r\n\t\t\t\t\t\t\t\tratingDoublesEndingYear={this.state.playerData.doubles_rating_ending_year}/>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"list-group-item\">Daltons verdient: {this.state.amountDaltonsEarned || 0}</li>\r\n\t\t\t\t\t\t<li className=\"list-group-item\">Daltons uitgedeeld: {this.state.playerData.amountDaltonsEarned || 0} </li>\r\n\t\t\t\t\t\t<li className=\"list-group-item\">id: {this.state.playerData.id} </li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default PlayerProfile\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from '../contents/home.js'\r\nimport Daltons from '../contents/daltons.js'\r\nimport NavBar from '../components/NavigationBar/navbar'\r\nimport PlayerGrid from '../components/playerGrid/playerGrid'\r\nimport PlayerProfile from '../components/playerProfile/playerProfile'\r\n\r\nfunction App() {\r\n\t\r\n\treturn (\r\n    <Router>\r\n    \t<div className=\"App\">\r\n\t\t\t\t<NavBar></NavBar>\r\n\t\t\t\t<Route exact path=\"/\"\r\n\t\t\t\t\tcomponent={Home}>\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/team\"\r\n\t\t\t\t\tcomponent={PlayerGrid}>\r\n    \t\t</Route>\r\n\t\t\t\t<Route exact path=\"/daltons\"\r\n\t\t\t\t\tcomponent={Daltons}>\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route \r\n\t\t\t\t\tpath=\"/players/:id\"\r\n\t\t\t\t\tcomponent={PlayerProfile}/>\r\n    \t</div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Importing the Bootstrap CSS\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}